@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents
@using HerPublicWebsite.BusinessLogic.Models.Enums
@using HerPublicWebsite.Models.Enums;
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using HerPublicWebsite.Controllers

@model HerPublicWebsite.Models.Questionnaire.SelectAddressViewModel
@{
    ViewBag.Title = "Address";
}

@section BeforeMain {
    <nav>
        @await Html.GovUkBackLink(new BackLinkViewModel
        {
            Text = "Back",
            Href = Model.BackLink,
        })
    </nav>
}

@{ var extraRouteValues = new{ entryPoint = Model.EntryPoint }; }

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        
        @if (Model.IsMultipleAddresses)
        {
            <form action="@Url.Action(nameof(QuestionnaireController.SelectAddress_Post), "Questionnaire")" method="post" novalidate>
                @(Html.HiddenFor(m => m.EntryPoint))
                @(Html.HiddenFor(m => m.IsMultipleAddresses))
                @Html.AntiForgeryToken()


                @await Html.GovUkRadiosFromStringsFor(m => m.SelectedAddressIndex,
                           radioOptions: new Dictionary<string, LabelViewModel>(
                               Model.Addresses.Select(
                                   (result, i) => new KeyValuePair<string, LabelViewModel>(
                                       i.ToString(),
                                       new LabelViewModel
                                       {
                                           Text = result.DisplayAddress,
                                       }
                                       )
                                   )
                               ),
                           fieldsetOptions: new FieldsetViewModel()
                           {
                               Legend = new LegendViewModel()
                               {
                                   Text = "Select your address",
                                   Classes = "govuk-fieldset__legend--l",
                                   IsPageHeading = true
                               }
                           }
                           )

                <p class="govuk-body">
                    <a class="govuk-link" href="@Url.Action(nameof(QuestionnaireController.ManualAddress_Get), "Questionnaire", extraRouteValues)">Address not listed</a>
                </p>

                @await Html.GovUkButton(new ButtonViewModel
                {
                    Text = "Continue",
                })

            </form>
        }
        else if (Model.IsSingleAddress) {
             <form action="@Url.Action(nameof(QuestionnaireController.SelectAddress_Post), "Questionnaire")" method="post" novalidate>
                @(Html.HiddenFor(m => m.EntryPoint))
                @(Html.HiddenFor(m => m.IsSingleAddress))
                @Html.AntiForgeryToken()

                @await Html.GovUkRadiosFor(m => m.IsAddressCorrect,
                            labelOptions: new Dictionary<YesOrNo, LabelViewModel> {
                                { YesOrNo.Yes, new() { Text = "Yes, this is my address" } },
                                { YesOrNo.No, new() { Text = "No, this is not my address" } }
                            },
                            fieldsetOptions: new FieldsetViewModel()
                            {
                                Legend = new LegendViewModel()
                                {
                                    Html = @<text>
                                            <h1 class="govuk-fieldset__legend--l">Is this your address?</h1>
                                            <p>@Html.Raw(
                                                        string.Join("<br/>",
                                                            new List<string>{
                                                                Model.Addresses[0].AddressLine1,
                                                                Model.Addresses[0].AddressLine2,
                                                                Model.Addresses[0].County,
                                                                Model.Addresses[0].Town,
                                                                Model.Addresses[0].Postcode
                                                            }
                                                            .Where(x => !string.IsNullOrEmpty(x))
                                                            .Select(x => Html.Encode(x))))
                                            </p>
                                        </text>
                                }
                            }
                           )


                <div class="govuk-button-group">
                    @(await Html.GovUkButton(new ButtonViewModel
                    {
                        Text = "Continue",
                    }))
                </div>

            </form>
        }
        else
        {
            <h1 class="govuk-heading-l">No address found</h1>
            <p class="govuk-body">There are no results for this postcode. If you think you made a mistake you can <a class="govuk-link" href="@Url.Action(nameof(QuestionnaireController.Address_Get), "Questionnaire", extraRouteValues)">search again</a>.</p>
            <p class="govuk-body">If you think you entered your address correctly you can <a class="govuk-link" href="@Url.Action(nameof(QuestionnaireController.ManualAddress_Get), "Questionnaire", extraRouteValues)">enter your full address</a>.</p>
        }
    </div>
</div>
