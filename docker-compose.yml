services:
  app:
    build:
      context: .
      args:
        # If running docker-compose via a run configuration in Rider, it will
        # override this with whatever build configuration you have selected.
        # This is clever and kind of it, but a bit surprising!
        CONFIGURATION: "Debug"
    ports:
      - "5000:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_HTTP_PORTS: "8080"
    volumes:
      # map the dotnet user-secret folder
      - $APPDATA/Microsoft/UserSecrets:/home/appuser/.microsoft/usersecrets:ro
    depends_on:
      db:
        condition: service_healthy
        restart: true
      minio:
        condition: service_healthy
  db:
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: whlgdev
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER" ]
      interval: 10s
      timeout: 5s
      retries: 5
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
  minio-setup:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
        mc alias set local http://minio:9000 minioadmin minioadmin;
        mc mb -p local/desnz-whlg-portal-referrals;
        exit 0;
      "
  tests:
    build:
      context: .
    command: ["dotnet", "test"]
    profiles: ["test"]
    
volumes:
  minio-data:
    name: whlg-minio-data